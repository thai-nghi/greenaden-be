"""empty message

Revision ID: df8c0ec389e7
Revises: 
Create Date: 2024-09-24 00:08:00.506151

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "df8c0ec389e7"
down_revision = None
branch_labels = None
depends_on = None

rank_enum = postgresql.ENUM(
    "ROOKIE",
    "CADET",
    "WARRIOR",
    "CHAMPION",
    "LEGEND",
    name="userrank",
    create_type=False,
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    rank_enum.create(op.get_bind(), checkfirst=True)
    op.create_table(
        "shop_item",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column(
            "rank_to_unlock",
            rank_enum,
            nullable=False,
        ),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("banner_pic", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("points", sa.Integer(), nullable=False, default=0),
        sa.Column("total_points", sa.Integer(), nullable=False, default=0),
        sa.Column("city", sa.String(), nullable=False),
        sa.Column("country", sa.String(), nullable=False),
        sa.Column(
            "rank",
            rank_enum,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "user_google_id",
        sa.Column("google_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("google_id"),
    )
    op.create_table(
        "user_inventory",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["shop_item.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "item_id", name="inventory_pk"),
    )
    op.create_table(
        "user_point_gain",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("point", sa.Integer(), nullable=False),
        sa.Column(
            "gain_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("current_timestamp"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    rank_enum.drop(op.get_bind())
    op.drop_table("user_point_gain")
    op.drop_table("user_inventory")
    op.drop_table("user_google_id")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("shop_item")
    # ### end Alembic commands ###
